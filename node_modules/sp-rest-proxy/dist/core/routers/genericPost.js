"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var BasicRouter_1 = require("../BasicRouter");
var PostRouter = (function (_super) {
    __extends(PostRouter, _super);
    function PostRouter(context, settings) {
        var _this = _super.call(this, context, settings) || this;
        _this.router = function (req, res, _next) {
            _this.spr = _this.getHttpClient();
            var endpointUrl = _this.util.buildEndpointUrl(req);
            _this.logger.info('\nPOST (generic): ' + endpointUrl);
            var agent = _this.util.isUrlHttps(endpointUrl) ? _this.settings.agent : undefined;
            var body = '';
            req.on('data', function (chunk) { return body += chunk; });
            req.on('end', function () { return __awaiter(_this, void 0, void 0, function () {
                var regExpOrigin, requestHeadersPass, digest, ex_1;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (req.headers.origin) {
                                regExpOrigin = new RegExp(req.headers.origin, 'g');
                                body = body.replace(regExpOrigin, this.ctx.siteUrl);
                            }
                            requestHeadersPass = {};
                            Object.keys(req.headers).forEach(function (prop) {
                                if (prop.toLowerCase() === 'accept' && req.headers[prop] !== '*/*') {
                                    requestHeadersPass['Accept'] = req.headers[prop];
                                }
                                if (prop.toLowerCase() === 'content-type') {
                                    requestHeadersPass['Content-Type'] = req.headers[prop];
                                }
                                if (prop.toLowerCase() === 'slug') {
                                    requestHeadersPass['Slug'] = req.headers[prop];
                                }
                                if (prop.toLowerCase() === 'if-match') {
                                    requestHeadersPass['If-Match'] = req.headers[prop];
                                }
                                if (prop.toLowerCase() === 'x-http-method') {
                                    requestHeadersPass['X-HTTP-Method'] = req.headers[prop];
                                }
                                if (prop.toLowerCase() === 'x-requestdigest') {
                                    requestHeadersPass['X-RequestDigest'] = req.headers[prop];
                                }
                            });
                            if (!(!requestHeadersPass['X-RequestDigest'] && endpointUrl.indexOf('/_vti_bin') !== -1)) return [3, 4];
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 4]);
                            return [4, Promise.resolve(this.spr.requestDigest(endpointUrl.split('/_vti_bin')[0]))];
                        case 2:
                            digest = _a.sent();
                            requestHeadersPass['X-RequestDigest'] = digest;
                            return [3, 4];
                        case 3:
                            ex_1 = _a.sent();
                            return [2, this.transmitError(res, ex_1)];
                        case 4:
                            this.util.getAuthOptions()
                                .then(function (opt) {
                                var headers = __assign(__assign({}, opt.headers), requestHeadersPass);
                                var options = {
                                    json: false,
                                    processData: false
                                };
                                return _this.spr.post(endpointUrl, __assign(__assign({ headers: headers, body: body }, options), { agent: agent }));
                            })
                                .then(function (r) { return _this.transmitResponse(res, r); })
                                .catch(function (err) { return _this.transmitError(res, err); });
                            return [2];
                    }
                });
            }); });
        };
        return _this;
    }
    return PostRouter;
}(BasicRouter_1.BasicRouter));
exports.PostRouter = PostRouter;
//# sourceMappingURL=genericPost.js.map