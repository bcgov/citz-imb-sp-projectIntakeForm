import { Request, Response, NextFunction } from 'express';
import { ProxyUtils } from '../utils/proxy';
import { Logger } from '../utils/logger';
import { ISPRequest } from 'sp-request';
import { IProxyContext, IProxySettings } from './interfaces';
import { IncomingMessage } from 'http';
export declare class BasicRouter {
    ctx: IProxyContext;
    settings: IProxySettings;
    spr: ISPRequest;
    util: ProxyUtils;
    logger: Logger;
    constructor(ctx: IProxyContext, settings: IProxySettings);
    router: (req: Request, res: Response, next?: NextFunction) => void;
    getHttpClient(): ISPRequest;
    transmitResponse(res: Response, response: IncomingMessage): Promise<void>;
    transmitError(res: Response, err: any): void;
}
