{"ast":null,"code":"var _jsxFileName = \"C:\\\\webProjects\\\\project-intake-form\\\\src\\\\components\\\\Table\\\\Table.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { getListAndItems } from \"Components\";\nexport const Table = ({\n  listName,\n  options,\n  tableTitle\n}) => {\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [actions, setActions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [components, setComponents] = useState();\n\n  const populateTable = async () => {\n    setIsLoading(true);\n    const list = await getListAndItems(listName);\n\n    if (tableTitle) {\n      setTitle(tableTitle);\n    } else {\n      setTitle(list.title);\n    }\n\n    setColumns(list.columns);\n    setData(list.items);\n    setIsLoading(false);\n    console.log(\"listFromPopTable :>> \", list);\n    const x = {\n      Toolbar: props => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      })))\n    }; //ts-ignore\n\n    setComponents(x);\n  };\n\n  useEffect(() => {\n    populateTable();\n    return () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n    columns: columns,\n    data: data,\n    title: title,\n    options: options,\n    actions: actions,\n    isLoading: isLoading,\n    components: components,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["C:/webProjects/project-intake-form/src/components/Table/Table.tsx"],"names":["React","useState","useEffect","MaterialTable","MTableToolbar","getListAndItems","Table","listName","options","tableTitle","data","setData","columns","setColumns","title","setTitle","actions","setActions","isLoading","setIsLoading","components","setComponents","populateTable","list","items","console","log","x","Toolbar","props"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAAyD,OAAzD;AACA,OAAOC,aAAP,IAAwBC,aAAxB,QAA6C,gBAA7C;AACA,SAASC,eAAT,QAAgC,YAAhC;AAWA,OAAO,MAAMC,KAAqB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAuC;AAC1E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,EAA5C;;AAEA,QAAMqB,aAAa,GAAG,YAAY;AAChCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAMI,IAAI,GAAG,MAAMlB,eAAe,CAACE,QAAD,CAAlC;;AAEA,QAAIE,UAAJ,EAAgB;AACdM,MAAAA,QAAQ,CAACN,UAAD,CAAR;AACD,KAFD,MAEO;AACLM,MAAAA,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACD;;AAEDD,IAAAA,UAAU,CAACU,IAAI,CAACX,OAAN,CAAV;AACAD,IAAAA,OAAO,CAACY,IAAI,CAACC,KAAN,CAAP;AAEAL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,IAArC;AACA,UAAMI,CAAC,GAAG;AACRC,MAAAA,OAAO,EAAGC,KAAD,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD,oBAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAFM,KAAV,CAjBgC,CAwBhC;;AACAR,IAAAA,aAAa,CAACM,CAAD,CAAb;AACD,GA1BD;;AA4BAzB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,aAAa;AACb,WAAO,MAAM,CAAE,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,uDACE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEV,OAAxB;AAAiC,IAAA,IAAI,EAAEF,IAAvC;AAA6C,IAAA,KAAK,EAAEI,KAApD;AAA2D,IAAA,OAAO,EAAEN,OAApE;AAA6E,IAAA,OAAO,EAAEQ,OAAtF;AAA+F,IAAA,SAAS,EAAEE,SAA1G;AAAqH,IAAA,UAAU,EAAEE,UAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA9CM","sourcesContent":["import React, { FC, useState, useEffect, Fragment } from \"react\";\r\nimport MaterialTable, { MTableToolbar } from \"material-table\";\r\nimport { getListAndItems } from \"Components\";\r\nimport { Icons } from \"Components\";\r\n\r\ninterface TableProps {\r\n  listName: string;\r\n  tableTitle?: string;\r\n  options?: Object;\r\n  changeItemPermission?: boolean;\r\n  customActions?: Array<Object>;\r\n}\r\n\r\nexport const Table: FC<TableProps> = ({ listName, options, tableTitle }) => {\r\n  const [data, setData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [actions, setActions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [components, setComponents] = useState();\r\n\r\n  const populateTable = async () => {\r\n    setIsLoading(true);\r\n\r\n    const list = await getListAndItems(listName);\r\n\r\n    if (tableTitle) {\r\n      setTitle(tableTitle);\r\n    } else {\r\n      setTitle(list.title);\r\n    }\r\n\r\n    setColumns(list.columns);\r\n    setData(list.items);\r\n\r\n    setIsLoading(false);\r\n\r\n    console.log(\"listFromPopTable :>> \", list);\r\n    const x = {\r\n      Toolbar: (props: any) => (\r\n        <div>\r\n          <MTableToolbar {...props} />\r\n        </div>\r\n      ),\r\n    };\r\n    //ts-ignore\r\n    setComponents(x);\r\n  };\r\n\r\n  useEffect(() => {\r\n    populateTable();\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MaterialTable columns={columns} data={data} title={title} options={options} actions={actions} isLoading={isLoading} components={components} />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}