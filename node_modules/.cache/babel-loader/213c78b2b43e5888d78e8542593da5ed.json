{"ast":null,"code":"export const Icons = {//   Add: forwardRef((props, ref) => <Add {...props} ref={ref} />),\n  //   AddBox: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  //   Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  //   Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  //   Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  //   DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  //   Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  //   Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  //   Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  //   FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  //   LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  //   NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  //   PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  //   People: forwardRef((props, ref) => <PeopleIcon {...props} ref={ref} />),\n  //   ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  //   Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  //   SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  //   ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  //   ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};","map":{"version":3,"sources":["C:/webProjects/project-intake-form/src/components/Reusable/Icons/Icons.tsx"],"names":["Icons"],"mappings":"AAmBA,OAAO,MAAMA,KAAK,GAAG,CACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBmB,CAAd","sourcesContent":["import React, { forwardRef } from \"react\";\r\nimport Add from \"@material-ui/icons/Add\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\n\r\nexport const Icons = {\r\n  //   Add: forwardRef((props, ref) => <Add {...props} ref={ref} />),\r\n  //   AddBox: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  //   Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  //   Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  //   Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  //   DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  //   Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  //   Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  //   Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  //   FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  //   LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  //   NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  //   PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  //   People: forwardRef((props, ref) => <PeopleIcon {...props} ref={ref} />),\r\n  //   ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  //   Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  //   SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  //   ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  //   ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}