{"ast":null,"code":"var _jsxFileName = \"C:\\\\webProjects\\\\project-intake-form\\\\src\\\\components\\\\Table\\\\Table.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { getListAndItems } from \"Components\";\nexport const Table = ({\n  listName,\n  options,\n  tableTitle\n}) => {\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [actions, setActions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const populateTable = async () => {\n    setIsLoading(true);\n    const list = await getListAndItems(listName);\n\n    if (tableTitle) {\n      setTitle(tableTitle);\n    } else {\n      setTitle(list.title);\n    }\n\n    setColumns(list.columns);\n    setData(list.items);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    populateTable();\n    return () => {};\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialTable, {\n    columns: columns,\n    data: data,\n    title: title,\n    options: options,\n    actions: actions,\n    isLoading: isLoading,\n    components: {\n      Toolbar: props => /*#__PURE__*/React.createElement(React.Fragment, null, \"dropdown\"),\n      FilterRow: props => {\n        console.log(\"filterRow!\", props);\n        props.columns[1].tableData.filterValue = \"PRJ1234567\";\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 20\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["C:/webProjects/project-intake-form/src/components/Table/Table.tsx"],"names":["React","useState","useEffect","MaterialTable","getListAndItems","Table","listName","options","tableTitle","data","setData","columns","setColumns","title","setTitle","actions","setActions","isLoading","setIsLoading","populateTable","list","items","Toolbar","props","FilterRow","console","log","tableData","filterValue"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,SAA9B,QAAyD,OAAzD;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,eAAT,QAAgC,YAAhC;AAWA,OAAO,MAAMC,KAAqB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAuC;AAC1E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMkB,aAAa,GAAG,YAAY;AAChCD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,UAAME,IAAI,GAAG,MAAMhB,eAAe,CAACE,QAAD,CAAlC;;AAEA,QAAIE,UAAJ,EAAgB;AACdM,MAAAA,QAAQ,CAACN,UAAD,CAAR;AACD,KAFD,MAEO;AACLM,MAAAA,QAAQ,CAACM,IAAI,CAACP,KAAN,CAAR;AACD;;AAEDD,IAAAA,UAAU,CAACQ,IAAI,CAACT,OAAN,CAAV;AACAD,IAAAA,OAAO,CAACU,IAAI,CAACC,KAAN,CAAP;AAEAH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAfD;;AAiBAhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,aAAa;AACb,WAAO,MAAM,CAAE,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,uDACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAER,OADX;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,KAAK,EAAEI,KAHT;AAIE,IAAA,OAAO,EAAEN,OAJX;AAKE,IAAA,OAAO,EAAEQ,OALX;AAME,IAAA,SAAS,EAAEE,SANb;AAOE,IAAA,UAAU,EAAE;AACVK,MAAAA,OAAO,EAAGC,KAAD,iBAAW,qDADV;AAEVC,MAAAA,SAAS,EAAGD,KAAD,IAAW;AACpBE,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,KAA1B;AACAA,QAAAA,KAAK,CAACZ,OAAN,CAAc,CAAd,EAAiBgB,SAAjB,CAA2BC,WAA3B,GAAyC,YAAzC;AACA,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AANS,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAoBD,CAjDM","sourcesContent":["import React, { FC, useState, useEffect, Fragment } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { getListAndItems } from \"Components\";\r\nimport { Icons } from \"Components\";\r\n\r\ninterface TableProps {\r\n  listName: string;\r\n  tableTitle?: string;\r\n  options?: Object;\r\n  changeItemPermission?: boolean;\r\n  customActions?: Array<Object>;\r\n}\r\n\r\nexport const Table: FC<TableProps> = ({ listName, options, tableTitle }) => {\r\n  const [data, setData] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [actions, setActions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const populateTable = async () => {\r\n    setIsLoading(true);\r\n\r\n    const list = await getListAndItems(listName);\r\n\r\n    if (tableTitle) {\r\n      setTitle(tableTitle);\r\n    } else {\r\n      setTitle(list.title);\r\n    }\r\n\r\n    setColumns(list.columns);\r\n    setData(list.items);\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    populateTable();\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MaterialTable\r\n        columns={columns}\r\n        data={data}\r\n        title={title}\r\n        options={options}\r\n        actions={actions}\r\n        isLoading={isLoading}\r\n        components={{\r\n          Toolbar: (props) => <>dropdown</>,\r\n          FilterRow: (props) => {\r\n            console.log(\"filterRow!\", props);\r\n            props.columns[1].tableData.filterValue = \"PRJ1234567\";\r\n            return <span></span>;\r\n          },\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}